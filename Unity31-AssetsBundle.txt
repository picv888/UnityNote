AssetBundle
什么是AssetBundle？
AssetBundle是把一些资源文件或场景玩家以某种方式保存在一个文件中。一个AssetBundle可以包含模型、材质、图片或场景等。但是AssetBundle不能包含脚本文件。
AssetBundle主要用于做热更新使用。

AB包的依赖
如果一个AB包a中资源使用了另一个AB包b中的资源，那么这个a就依赖于b。
当你使用AB包a中的资源的时候，需要先把依赖的AB包b先加载进来。

同一个AB包（在卸载之前）只能加载一次。

Mnaifest：
每个AB包都对应一个Manifest文件，包含如下信息：
ManifestFileVersion：版本号
CRC：循环冗余码
Hashes：资源文件的哈希码， 用于检查增加的构建AB包
ClassTypes：该AB包中所有资源使用到的类类型
Assets：对应该AB包中的所有的资源
Dependencies：该AB包的直接依赖。

单一的Manifest文件：
所有的AssetBundle包。
所有的AB包的依赖。


使用AB的步骤
1.加载总的构建的AB包
2.从单一的AB包中去加载构建清单
3.从构建清单中获取指定的AB包的所有的依赖项并加载所有的依赖项
4.加载资源所在的AB包
5.从AB包中加载资源

AB包的卸载
Unload（bool）
当传入true时，不光卸载内存中的Assetbundle对象，还卸载从这个AB包中加载到的资源。
当传入false时，只卸载内存终点额AB包，不卸载从AB包中加载的资源


字典
简介：
1．	字典里的每一个元素都是一对键值对（由两个元素组成： 一个键一个是值）
2．	字典的键必须是唯一的，值不需要唯一。
3．	键和值都可以是任意的类型（比如：基本类型， 自定义的类型）
4．	可以通过键去访问值

字典的使用：
1．必须引用命名空间System.Collections.Generic;


热更新的流程：
1.	先把最新的资源打包成AB包，把最新AB包上传到服务器上，并且修改服务器端资源版本号。
2.	客户端一启动游戏，首先判断本地的版本号与服务器的版本号是否一致。
3.	如果不一致，从服务器下载最新的资源AB包替换本地的AB包
4.	解析最新的AB包从中加载想要的资源。


