工程的作用：归类、管理游戏的资源

工程文件：
Library和Temp文件夹：里面的文件是Unity根据Unity的版本和系统的版本生成的，拷贝项目时不需要拷贝这两个文件夹。迁移项目后如果运行错误可以尝试删除这两个文件夹，运行unity后会重新生成。
Assets文件夹：储存所有用到的资源。
ProjectSettings文件夹：工程设置
.unityPackage文件：资源包文件  
.unity文件：Scene文件   

控制台输出：Debug.Log("");

组件：将一些具用功能性的代码封装起来，封装成一个类，当这个类挂到游戏物体身上去的时候，就相当于对此类进行了实例化，那么这个游戏物体也就具有了这个组件对象所具有的功能。

游戏物体：
从表现层来看：场景视图中或者层级视图中能被看到的或者能被选中的东西。
从面向对象的角度来看：游戏物体是一个或多个组件的集合。

Position：坐标，Unity中使用左手坐标轴，拇指X轴向右，食指Y轴向上，中指Z轴向前（正方向）。单位是米
Rotation：旋转，单位是角度（°），正方向为逆时针，如：Z = 45 就是面向Z轴前进方向，绕Z轴逆时针旋转45°
Scale：比例，单位倍数

帧率（FPS）:
单位时间内画面刷新的帧数
帧率 = 帧数 / 时间
手游：30~60
PC/主机游戏：60~120
VR：120以上

游戏运行后，Unity引擎为我们做了：
1.实例化所有游戏物体和组件
2.激活指定的游戏物体和组件
3.调用FixedUpdate()、Update()、LateUpdate()等函数

脚本组件（script）的生命周期函数（事件函数）：在特定的时间点，被Unity引擎调用的函数叫做生命周期函数。如：
Awake() //在此组件被实例化的时候被调用
OnEnable() //在此组件被激活的时候被调用一次
OnDisable() //在此组件被设置为失活的时候被调用一次
Start() //在此组件对象第一次被激活的时候被调用，在OnEnable()之后。
FixedUpdate()//每一物理帧被调用一次
Update() //在游戏物体和此脚本组件都被激活时，每一画面刷新帧被调用一次
LateUpdate() //在游戏物体和此组件都被激活时，每一画面刷新帧被调用一次，在Update()被调用之后之后调用。一般关于摄像机的代码写在这，保证物体比摄像机先动，防止画面抖动。
OnDestroy() //当组件对象被销毁的时候被调用

快捷键：
ctrl+shift+F  移动物体到第一人称视角的位置

ctrl+alt+F  移动物体到眼前

游戏对象不在主摄像头中？
Hierarchy中双击选择需要显示的游戏对象，再单击Main Camera选中，最后Ctrl+Shift+F键盘即可。

按住Ctrl键移动物体会以一定的增量来移动、旋转、缩放物体，菜单Edit-Snap Setting中可以设置增量

Ctrl+Shift 使物体在另一个物体上移动,物体在被相交的物体上移动

顶点对齐：按住V键可以在游戏物体身上选择一个顶点，在顶点上点某个坐标轴拖动，可以自动对齐其他游戏物体的顶点（点的坐标轴的方向上最近的顶点）。
